###############################
d$x <- ifelse(d$pre_crastinate == "yes", 0.5, -0.5)
X <- cbind(1, d$x)
stan_df <- list(
N = nrow(d),
K = ncol(X),
y = d$opt_strat,
X = X)
m <- stan(
file = "beta_simple.stan",
data = stan_df,
chains = 4,
warmup = 2000,
iter = 5000,
refresh = 100
)
samples <- rstan::extract(m)
pred_dat <- tibble(pre_crastinate = c(-0.5, 0.5))
X = as.matrix(pred_dat)
X <- cbind(1, X)
# Look at prior predictions for mmu
mu <- array(0, dim = c(100000, nrow(X)))
for (ii in 1:100000) {
# generate a random beta from priors
beta <- as.vector(c(
rnorm(1, mean=0, sd=.5),
rnorm(1, mean=0, sd=.1)
))
mu[ii, ] <- plogis(X %*% beta)
}
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
plt <- ggplot(filter(mu_df, pre_crastinate != "difference"), aes(x = mu, fill = pre_crastinate))
plt <- plt + geom_density(alpha = 0.5)
plt <- plt + geom_vline(xintercept = 0, linetype = 2)
plt <- plt + scale_y_continuous(limits = c(0, 10), expand = c(0, 0))
plt <- plt + scale_x_continuous("group mean proportion prior estimates", limits = c(0, 1),, expand = c(0, 0),
breaks = seq(0,1, 0.25), labels = c("0", "0.25", "0.50", "0.75", "1"))
plt <- plt + scale_fill_viridis_d()
plt <- plt + theme_bw()
plt <- plt + theme(
legend.position="none",
legend.background = element_rect(size = 0.25, color = "black"))
ggsave("scratch/strat_prior_lines1.pdf", width = 4, height = 3)
ggsave("scratch/strat_prior_lines1.png", width = 4, height = 3)
plt <- plt + geom_vline(alpha = 0.5, data = d, aes(xintercept = opt_strat, colour = pre_crastinate)) +  scale_colour_viridis_d()
plt
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
# Look at posterior predictions for mu
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
# pred_dat$lower = unlist(hpdi[1,])
# pred_dat$upper = unlist(hpdi[2,])
# pred_dat$mean = colMeans(mu)
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
plt <- ggplot(mu_df, aes(x = mu, fill = pre_crastinate))
plt <- plt + geom_density(alpha = 0.5)
plt <- plt + geom_vline(xintercept = 0, linetype = 2)
plt <- plt + scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0))
plt <- plt + scale_y_continuous(limits = c(0, 10), expand = c(0, 0))
plt <- plt + scale_fill_viridis_d()
plt <- plt + theme_bw() + theme(legend.position="none")
ggsave("scratch/strat_diff_2.pdf", width = 4, height = 3)
ggsave("scratch/strat_diff_2.png", width = 4, height = 3)
plt
mu_df
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
# Look at posterior predictions for mu
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
# pred_dat$lower = unlist(hpdi[1,])
# pred_dat$upper = unlist(hpdi[2,])
# pred_dat$mean = colMeans(mu)
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 15), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() +
theme(legend.position="none")
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes"), each = 12000),
mu  = c(mu[,1], mu[,2]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates",
limits = c(0, 1), expand = c(0, 0), labels = c("0", "0.25", "0.50", "0.75", "1")) +
scale_y_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() + theme(legend.position="none") +
geom_vline(alpha = 0.5, data = d, aes(xintercept = search_strat, colour = pre_crastinate)) +
scale_colour_viridis_d()
ggsave("scratch/strat_diff_1.pdf", width = 4, height = 3)
ggsave("scratch/strat_diff_1.png", width = 4, height = 3)
# ggsave("scratch/strat_diff_2.pdf", width = 4, height = 3)
# ggsave("scratch/strat_diff_2.png", width = 4, height = 3)
#
#
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes"), each = 12000),
mu  = c(mu[,1], mu[,2]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates",
limits = c(0, 1), expand = c(0, 0), labels = c("0", "0.25", "0.50", "0.75", "1")) +
scale_y_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() + theme(legend.position="none") +
geom_vline(alpha = 0.5, data = d, aes(xintercept = search_strat, colour = pre_crastinate)) +
scale_colour_viridis_d()
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates",
limits = c(0, 1), expand = c(0, 0), labels = c("0", "0.25", "0.50", "0.75", "1")) +
scale_y_continuous(limits = c(0, 10), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() + theme(legend.position="none") +
geom_vline(alpha = 0.5, data = d, aes(xintercept = opt_strat, colour = pre_crastinate)) +
scale_colour_viridis_d()
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
# pred_dat$lower = unlist(hpdi[1,])
# pred_dat$upper = unlist(hpdi[2,])
# pred_dat$mean = colMeans(mu)
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
mu_df
samples <- rstan::extract(m)
pred_dat <- tibble(pre_crastinate = c(-0.5, 0.5))
X = as.matrix(pred_dat)
X <- cbind(1, X)
# Look at prior predictions for mu
mu <- array(0, dim = c(100000, nrow(X)))
for (ii in 1:100000) {
# generate a random beta from priors
beta <- as.vector(c(
rnorm(1, mean=0, sd=.5),
rnorm(1, mean=0, sd=.1)
))
mu[ii, ] <- plogis(X %*% beta)
}
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = as_factor(pre_crastinate),
pre_crastinate = fct_relevel(
pre_crastinate, c("no", "difference", "yes")))
#
ggplot(filter(mu_df, pre_crastinate != "difference"), aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_y_continuous(limits = c(0, 4), expand = c(0, 0)) +
scale_x_continuous("group mean proportion prior estimates", limits = c(0, 1), expand = c(0, 0),
breaks = seq(0,1, 0.25), labels = c("0", "0.25", "0.50", "0.75", "1")) +
scale_fill_viridis_d() +
theme_bw() +
theme(
legend.position="none",
legend.background = element_rect(size = 0.25, color = "black")) -> plt_prior
#
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
# Look at posterior predictions for mu
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
# pred_dat$lower = unlist(hpdi[1,])
# pred_dat$upper = unlist(hpdi[2,])
# pred_dat$mean = colMeans(mu)
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 15), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() +
theme(legend.position="none") -> plt_post
plt_prior + plot_post
plt_prior + plt_post
library(patchwork)
plt_prior + plt_post
samples <- rstan::extract(m)
pred_dat <- tibble(pre_crastinate = c(-0.5, 0.5))
X = as.matrix(pred_dat)
X <- cbind(1, X)
# Look at prior predictions for mu
mu <- array(0, dim = c(100000, nrow(X)))
for (ii in 1:100000) {
# generate a random beta from priors
beta <- as.vector(c(
rnorm(1, mean=0, sd=.5),
rnorm(1, mean=0, sd=.1)
))
mu[ii, ] <- plogis(X %*% beta)
}
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = as_factor(pre_crastinate),
pre_crastinate = fct_relevel(
pre_crastinate, c("no", "difference", "yes")))
mu_df
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = "prior")
mu_df
mu_prior <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = "prior")
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
mu_prior <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = "prior")
samples <- rstan::extract(m)
pred_dat <- tibble(pre_crastinate = c(-0.5, 0.5))
X = as.matrix(pred_dat)
X <- cbind(1, X)
# Look at prior predictions for mu
mu <- array(0, dim = c(100000, nrow(X)))
for (ii in 1:100000) {
# generate a random beta from priors
beta <- as.vector(c(
rnorm(1, mean=0, sd=.5),
rnorm(1, mean=0, sd=.1)
))
mu[ii, ] <- plogis(X %*% beta)
}
mu_prior <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = "prior")
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df$pre_crastinate <- as_factor(mu_df$pre_crastinate)
mu_df$pre_crastinate <- fct_relevel(mu_df$pre_crastinate, c("no", "difference", "yes"))
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1]))
mu_df
mu_df <- tibble(
pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
bind_rows(mu_prior)
mu_df <- tibble(pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
bind_rows(mu_prior) %>%
mutate(pre_crastinate = as_factor(pre_crastinate))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 15), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() +
theme(legend.position="none") -> plt_post
plt_post
mu_prior <- tibble(pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = if_else(pre_crastinate == "difference",
"prior for difference",
"prior"))
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
samples <- rstan::extract(m)
pred_dat <- tibble(pre_crastinate = c(-0.5, 0.5))
X = as.matrix(pred_dat)
X <- cbind(1, X)
# Look at prior predictions for mu
mu <- array(0, dim = c(100000, nrow(X)))
for (ii in 1:100000) {
# generate a random beta from priors
beta <- as.vector(c(
rnorm(1, mean=0, sd=.5),
rnorm(1, mean=0, sd=.1)
))
mu[ii, ] <- plogis(X %*% beta)
}
mu_prior <- tibble(pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = if_else(pre_crastinate == "difference",
"prior for difference",
"prior"))
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
mu_df <- tibble(pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
bind_rows(mu_prior) %>%
mutate(pre_crastinate = as_factor(pre_crastinate))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 15), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() +
theme(legend.position="none") -> plt_post
plt_post
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(limits = c(0, 17), expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() +
theme(legend.position="none") -> plt_post
plt_post
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw() +
theme(legend.position="none") -> plt_post
plt_post
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_viridis_d() +
theme_bw()
viridis(1)
viridis::viridis(1)
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = c(viridis::viridis(1), viridis::viridis(16), viridis::viridis(9), "#444444", "#888888")) +
theme_bw()
viridis::viridis(1)
?scale_fill_manual
?viridis::viridis
viridis::viridis(3)
viridis::viridis(3)[3]
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = c(viridis::viridis(3)[1], viridis::viridis(3)[3], viridis::viridis(3)[2], "#444444", "#888888")) +
theme_bw()
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = c(viridis::viridis(3)[1], viridis::viridis(3)[3], viridis::viridis(3)[2], "#55555", "#99999")) +
theme_bw()
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = c(viridis::viridis(3)[1], viridis::viridis(3)[3], viridis::viridis(3)[2], "#555555", "#99999")) +
theme_bw()
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = c(viridis::viridis(3)[1], viridis::viridis(3)[3], viridis::viridis(3)[2], "#555555", "#999999")) +
theme_bw()
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_fill_manual(values = c(viridis::viridis(3)[1], viridis::viridis(3)[3], viridis::viridis(3)[2], "#555555", "#999999")) +
theme_bw()
gen_plot_pred <- function(dat, m) {
samples <- rstan::extract(m)
pred_dat <- tibble(pre_crastinate = c(-0.5, 0.5))
X = as.matrix(pred_dat)
X <- cbind(1, X)
# Look at prior predictions for mu
mu <- array(0, dim = c(100000, nrow(X)))
for (ii in 1:100000) {
# generate a random beta from priors
beta <- as.vector(c(
rnorm(1, mean=0, sd=.5),
rnorm(1, mean=0, sd=.1)
))
mu[ii, ] <- plogis(X %*% beta)
}
mu_prior <- tibble(pre_crastinate = rep(c("no", "yes", "difference"), each = 100000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
mutate(pre_crastinate = if_else(pre_crastinate == "difference",
"prior for difference",
"prior"))
#
HPDI(mu[,2] - mu[,1], 0.95)
mean(abs(mu[,2] - mu[,1]) > 0.05)
# Look at posterior predictions for mu
mu <- array(0, dim = c(nrow(samples$beta), nrow(X)))
for (ii in 1:nrow(samples$beta)) {
mu[ii, ] <- plogis(X %*% samples$beta[ii, ])
}
hpdi <- purrr::map_df(as.tibble(mu), HPDI, prob = 0.90)
mu_df <- tibble(pre_crastinate = rep(c("no", "yes", "difference"), each = 12000),
mu  = c(mu[,1], mu[,2], mu[,2] - mu[,1])) %>%
bind_rows(mu_prior) %>%
mutate(pre_crastinate = as_factor(pre_crastinate))
ggplot(mu_df, aes(x = mu, fill = pre_crastinate)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, linetype = 2) +
scale_x_continuous(
"group mean proportion posterior estimates", limits = c(-0.1, 0.82), expand = c(0,0)) +
scale_fill_manual(values = c(viridis::viridis(3)[1], viridis::viridis(3)[3], viridis::viridis(3)[2], "#555555", "#999999")) +
theme_bw()
return(plt_prior + plt_post)
}
knitr::opts_chunk$set(echo = TRUE)
options(digits = 3)
set.seed(2022)
mu_df <- gen_plot_pred(d_pilot, m_pilot)
